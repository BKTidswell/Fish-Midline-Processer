---
title: "Paper Figures and Text"
format: html
editor: visual
---

## Loading in the Libraries for Everything

```{r}
library(tidyverse)
library(ggplot2)
library(bbmle) #For ICtab
library(car)
library(ggpubr)
library(ggdist)
library(emmeans)
library(lme4)

```

## Functions and Variables

```{r}
rad2deg <- function(rad) {(rad * 180) / (pi)}
deg2rad <- function(deg) {(deg * pi) / (180)}
round_any <- function(x, accuracy, f=round){f(x/ accuracy) * accuracy}
ang_mean <- function(x){rad2deg(atan2(mean(sin(deg2rad(x))),mean(cos(deg2rad(x)))))}

fold_angle_0_360_to_0_180 <- function(x){abs(abs(x-180)-180)}

fold_angle_neg_180_180_to_neg_90_90 <- function(x){ifelse(x > 90,90-abs(90-x),ifelse(x < -90, -90+abs(-90-x), x))}

min_n <- function(x,n){sort(x)[1:n]}
max_n <- function(x,n){sort(x,decreasing = TRUE)[1:n]}

light_no_ab_color = "#d4d7dd"
light_ab_color = "#f5ba9e"
dark_no_ab_color = "#5e94d4"
dark_ab_color = "#1E4371"
sim_color = "#777777"

flow_split_still = "#F59DE2"
flow_split_flow = "#5DD492"

dark_split_light = "#5e94d4"
dark_split_dark = "#011627"

tailbeat_len = 19

allowed_flow_type = c("Still Water","Flowing Water (2 BL/s)")

dot_binwidth = 0.03

text_size = 16
```

Heading Velocity graphs

```{r}
fish_comp_data <- read.csv("Data/Fish_Comp_Values_3D.csv") %>%
                           mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation  == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep=", "))) %>%
                           separate(Fish, c("Fish1", "Fish2"),sep="x") %>% 
                           mutate(Data_ID = paste(Year,Month,Day,Trial, sep = "_"),
                                  Date = paste(Year,Month,Day,Trial, sep = "_"),
                                  Fish_ID = paste(Year,Month,Day,Trial,Fish1, sep = "_"))
                           
fish_comp_data <- na.omit(fish_comp_data)

min_dist <- 0
max_dist <- 2

fish_data_nn_normal <- fish_comp_data %>% filter(Distance >= min_dist & Distance <= max_dist) %>%
                                        group_by(Flow_Ablation_Darkness) %>%
                                        mutate(Fish1_Yaw_Heading_PS = Fish1_Yaw_Heading_PS - mean(Fish1_Yaw_Heading_PS)) %>%
                                        ungroup()


nn_heading_sum <- fish_data_nn_normal %>% mutate(angle_bins = round_any(Angle,pi/6)) %>%
                                                group_by(angle_bins,Flow,Ablation,Darkness,Flow_Ablation_Darkness) %>%
                                                summarise(mean_turn = mean(Fish1_Yaw_Heading_PS, na.rm = T),
                                                          sd_turn = sd(Fish1_Yaw_Heading_PS, na.rm = T),
                                                          n = n()) %>%
                                                ungroup() %>%
                                                na.omit()
```

Model and Graph

```{r}

heading_PS_model_still <- lm(Fish1_Yaw_Heading_PS ~ 0 + sin(Angle) + sin(Angle):Ablation + sin(Angle):Darkness + sin(Angle):Ablation:Darkness, 
                   data = fish_data_nn_normal %>% filter(Flow == "Still Water")) 
Anova(heading_PS_model_still)


heading_PS_graph <- ggplot(nn_heading_sum %>% filter(Flow == "Still Water"),
       aes(x = angle_bins, y = rad2deg(mean_turn), color = interaction(Ablation, Darkness, sep =", ")))+
  geom_point()+
  geom_line(aes(y = rad2deg(predict(heading_PS_model_still,
                    newdata = nn_heading_sum %>% filter(Flow == "Still Water") %>% mutate(Angle = angle_bins)))), size = 1)+
  theme_classic() +
  ylim(-50,50) +
  xlab("Direction of Neighbour (Degrees)") +
  ylab("Focal Fish Turning Angle Speed (Degrees/Sec)") +
  scale_colour_manual(values = c(light_no_ab_color,light_ab_color,dark_no_ab_color,dark_ab_color)) +
  scale_x_continuous(breaks = unique(nn_heading_sum$angle_bins),
                     labels = rad2deg(unique(nn_heading_sum$angle_bins))) +
  labs(color = "Sensory Conditions")

heading_PS_graph

ggsave("Paper Figures/Heading_PS_Graph.jpg", heading_PS_graph, width = 7, height = 7)

```


## School Summary Stats

```{r}
school_data <- read.csv("Data/Fish_School_Values_3D.csv")

school_data <- na.omit(school_data)

school_data <- school_data %>% mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           filter(School_Speed <= 5) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep="/n"))) %>%
                            
                           # ### Used to remove every third point to reduce autocorrelation
                           mutate(Date = paste(Year,Month,Day,sep="_"),
                                  Date_Trial = paste(Year,Month,Day,Trial,sep="_")) %>%
                           group_by(Date_Trial) %>%
                           filter(row_number() %% 3 == 1) %>%
                           ungroup() %>%
                           # ###
                          
                           group_by(Flow_Ablation_Darkness) %>%
                           mutate(NND_Mean_Val = mean(NND), NND_SD_Val = sd(NND),
                                  Polar_Mean_Val = mean(School_Polar), Polar_SD_Val = sd(School_Polar),
                                  Speed_Mean_Val = mean(School_Speed), Speed_SD_Val = sd(School_Speed),
                                  Area_Mean_Val = mean(Area), Area_SD_Val = sd(Area),
                                  Groups_Mean_Val = mean(Groups), Groups_SD_Val = sd(Groups),
                                  Mean_Groups_Mean_Val = mean(Mean_Groups), Mean_Groups_SD_Val = sd(Mean_Groups),
                                  Height_Mean_Val = mean(School_Height), Height_SD_Val = sd(School_Height)) %>%
                           ungroup()
```



### NND Plot

```{r}

my_comparisons <- list(c("No Ablation, Light", "No Ablation, Dark"),
                       c("No Ablation, Light", "Ablated, Dark"), 
                       c("Ablated, Light", "No Ablation, Dark"),
                       c("Ablated, Light", "Ablated, Dark"))

nnd_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = NND,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = NND_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=NND_Mean_Val-NND_SD_Val, ymax=NND_Mean_Val+NND_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Nearest Neighbor Distance (NND) in Still Water") +
  xlab("") +
  ylab("School NND (BL)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,2.5)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list(c("No Ablation, Light", "Ablated, Dark"), c("Ablated, Light", "Ablated, Dark"))

nnd_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = NND,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = NND_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=NND_Mean_Val-NND_SD_Val, ymax=NND_Mean_Val+NND_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Nearest Neighbor Distance (NND) in Flow (2 BL/s)") +
  xlab("") +
  ylab("School NND (BL)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,2.5)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})


nnd_still
nnd_flow


nnd_glm <- glm(NND ~ Ablation*Darkness*Flow, data = school_data)
Anova(nnd_glm)
emmeans(nnd_glm, specs = pairwise ~ Ablation:Darkness | Flow)

```

### Polarization

```{r}

my_comparisons <- list()

polar_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Polar,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Polar_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Polar_Mean_Val-Polar_SD_Val, ymax=Polar_Mean_Val+Polar_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Polarization in Still Water") +
  xlab("") +
  ylab("Polarization") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,1.15)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list()

polar_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Polar,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Polar_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Polar_Mean_Val-Polar_SD_Val, ymax=Polar_Mean_Val+Polar_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Polarization in Flowing Water (2 BL/s)") +
  xlab("") +
  ylab("Polarization") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,1.15)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

polar_still
polar_flow

polar_glm <- glm(School_Polar ~ Ablation*Darkness*Flow, data = school_data)
Anova(polar_glm)
emmeans(polar_glm, specs = pairwise ~ Ablation:Darkness | Flow)

polar_glm_still <- glm(School_Polar ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Still Water"))
Anova(polar_glm_still, test.statistic="F")

polar_glm_flow <- glm(School_Polar ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"))
Anova(polar_glm_flow, test.statistic="F")
```

### Speed

```{r}
my_comparisons <- list()

speed_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Speed,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Speed_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=max(Speed_Mean_Val-Speed_SD_Val,0), ymax=Speed_Mean_Val+Speed_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Speed (BL/s) in Still Water") +
  xlab("") +
  ylab("Speed (BL/s)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,6)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list(c("No Ablation, Light", "Ablated, Light"))

speed_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Speed,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Speed_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Speed_Mean_Val-Speed_SD_Val, ymax=Speed_Mean_Val+Speed_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Speed (BL/s) in Flowing Water (2 BL/s)") +
  xlab("") +
  ylab("Speed (BL/s)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,6)+
  stat_compare_means(comparisons = my_comparisons, label.y = c(5.5), label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

speed_still
speed_flow

speed_glm <- glm(School_Speed ~ Ablation*Darkness*Flow, data = school_data)
Anova(speed_glm)
emmeans(speed_glm, specs = pairwise ~ Ablation:Darkness | Flow)

speed_glm_still <- glm(School_Speed ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Still Water"))
Anova(speed_glm_still, test.statistic="F")

speed_glm_flow <- glm(School_Speed ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"))
Anova(speed_glm_flow, test.statistic="F")
```

### Number of Groups

```{r}
group_sum_data <- school_data %>% group_by(Flow, Ablation, Darkness, Groups) %>%
                            summarise(count = n()) %>%
                            ungroup() %>%
                            mutate(Groups = as.factor(Groups),
                                   Groups = fct_rev(Groups))

group_still <- ggplot(group_sum_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "),
           y = count,
           fill = Groups)) + 
    geom_bar(position="fill", stat="identity")+
    xlab("") +
    ylab("Proportion of Time") +
    theme_light()+ 
    scale_fill_manual(values=c("8" = "#1D3557","7" = "#325A7C","6" = "#457B9D","5" = "#7BAFBF",
                               "4" = "#A8DADC","3" = "#D0EBE6","2" = "#F1FAEE","1" = "#3ae639")) +
    theme(axis.text.x = element_text(size = text_size),
          axis.text.y = element_text(size = text_size),
          axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

group_flow <- ggplot(group_sum_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "),
           y = count,
           fill = Groups)) + 
    geom_bar(position="fill", stat="identity")+
    xlab("") +
    ylab("Proportion of Time") +
    theme_light()+ 
    scale_fill_manual(values=c("8" = "#1D3557","7" = "#325A7C","6" = "#457B9D","5" = "#7BAFBF",
                               "4" = "#A8DADC","3" = "#D0EBE6","2" = "#F1FAEE","1" = "#3ae639")) +
    theme(axis.text.x = element_text(size = text_size),
          axis.text.y = element_text(size = text_size),
          axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})


group_still
group_flow

groups_glm <- glm(Groups ~ Ablation*Darkness*Flow, data = school_data, family  = poisson)
Anova(groups_glm)
emmeans(groups_glm, specs = pairwise ~ Ablation:Darkness | Flow)

groups_glm_still <- glm(Groups ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Still Water"), family  = poisson)
Anova(groups_glm_still, test.statistic="F")

groups_glm_flow <- glm(Groups ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"), family  = poisson)
Anova(groups_glm_flow, test.statistic="F")

```

### Now we combine them

```{r}
school_stats_mega_plot <- ggarrange(nnd_still, nnd_flow, 
                                    polar_still, polar_flow,
                                    speed_still, speed_flow,
                                    group_still, group_flow,
          labels = c("A", "B", "C", "D", "E", "F", "G", "H"),
          ncol = 2, nrow = 4)  

school_stats_mega_plot

school_stats_mega_plot <- annotate_figure(school_stats_mega_plot, 
                top = text_grob("                 Still Water                                     Flowing Water (2 BL/s)",
                                size = 24),
                fig.lab.pos = "top")

ggsave("Paper Figures/school_stats_mega_plot.png", school_stats_mega_plot, width = 12, height = 17)
```

Parallax

```{r}
para_vals <- read.csv("Data/Parallax_Distances.csv") %>% mutate(BLs = Distance / 200)

breaks <- c("0.1")

para_plot <- ggplot(para_vals, aes(X, Y, z = BLs))+
  geom_contour_filled(bins = 5)+
  scale_fill_viridis_d("Projection Error (BL)", 
                       labels = c("< 0.1", "0.1 - 0.2", "0.2 - 0.3","0.3 - 0.4","0.4 - 0.5"))+
  theme_classic()+
  coord_fixed() +
  ylab("Vertical Distance from Principal Point (pixels)")+
  xlab("Hoizontal Distance from Principal Point (pixels)")+ 
  theme(text = element_text(size = 20))  

ggsave("Paper Figures/parallax_model.png", para_plot, width = 14, height = 7)
```

Autocorrelation Figure

```{r}

school_data_no_removals <- read.csv("Data/Fish_School_Values_3D.csv")
school_data_no_removals <- na.omit(school_data_no_removals)

school_data_no_removals <- school_data_no_removals %>% mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           filter(School_Speed <= 5) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep=", "))) %>%
                           mutate(Date = paste(Year,Month,Day,sep="_"),
                                  Date_Trial = paste(Year,Month,Day,Trial,sep="_"),)

for(i in seq(1:5)){
  print(i)
  
  new_autocorrs <- school_data_no_removals %>% group_by(Date_Trial) %>%
                    filter(!Date_Trial %in% c("2021_3_25_30","2020_7_28_29","2021_10_6_34",
                                              "2021_7_7_16","2021_3_25_7","2021_3_25_22",
                                              "2021_8_3_8")) %>%
                    summarise(nnd_corr = abs(cor.test(NND, lag(NND, n = i))$estimate),
                              nnd_p = cor.test(NND, lag(NND, n = i))$p.value,
                              polar_corr = abs(cor.test(School_Polar, lag(School_Polar, n = i))$estimate),
                              polar_p = cor.test(School_Polar, lag(School_Polar, n = i))$p.value,
                              speed_corr = abs(cor.test(School_Speed, lag(School_Speed, n = i))$estimate),
                              speed_p = cor.test(School_Speed, lag(School_Speed, n = i))$p.value,
                              groups_corr = abs(cor.test(Groups, lag(Groups, n = i))$estimate),
                              groups_p = cor.test(Groups, lag(Groups, n = i))$p.value,
                              area_corr = abs(cor.test(Area, lag(Area, n = i))$estimate),
                              area_p = cor.test(Area, lag(Area, n = i))$p.value,
                              height_corr = abs(cor.test(School_Height, lag(School_Height, n = i))$estimate),
                              height_p = cor.test(School_Height, lag(School_Height, n = i))$p.value,
                              lag = i)
  
  if(i == 1){
    school_autocorrs <- new_autocorrs
  }
  else{
    school_autocorrs <- rbind(school_autocorrs,new_autocorrs) 
  }
  
}

nnd_lag_plot <- ggplot(school_autocorrs, aes(as.factor(lag), nnd_corr))+
  stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = 0.25) +
  stat_summary(fun.y=mean, geom="point", size = 3) +
  ylim(0,1)+
  ylab("NND Autocorrelation")+
  xlab("Offest")+
  theme_classic()+ 
  theme(legend.position = "none")

polar_lag_plot <- ggplot(school_autocorrs, aes(as.factor(lag), polar_corr))+
  stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = 0.25) +
  stat_summary(fun.y=mean, geom="point", size = 3) +
  ylim(0,1)+
  ylab("Polarity Autocorrelation")+
  xlab("Offest")+
  theme_classic()+ 
  theme(legend.position = "none")

speed_lag_plot <- ggplot(school_autocorrs, aes(as.factor(lag), speed_corr))+
  stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = 0.25) +
  stat_summary(fun.y=mean, geom="point", size = 3) +
  ylim(0,1)+
  ylab("Speed Autocorrelation")+
  xlab("Offest")+
  theme_classic()+ 
  theme(legend.position = "none")

groups_lag_plot <- ggplot(school_autocorrs, aes(as.factor(lag), groups_corr))+
  stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = 0.25) +
  stat_summary(fun.y=mean, geom="point", size = 3) +
  ylim(0,1)+
  ylab("Numebr of Groups Autocorrelation")+
  xlab("Offest")+
  theme_classic()+ 
  theme(legend.position = "none")

lag_plots <- ggarrange(
          nnd_lag_plot, polar_lag_plot, speed_lag_plot, groups_lag_plot,
          ncol = 2, nrow = 2,
          labels = c("A", "B", "C", "D"))

ggsave("Paper Figures/Different_Lag_Figures.png", lag_plots, width = 7, height = 7)

```
