---
title: "Wall and LR Fish"
format: html
editor: visual
---

## Loading in the Libraries for Everything

```{r}
library(MASS)
library(tidyverse)
library(ggplot2)
library(bbmle) #For ICtab
library(car)
library(ggpubr)
library(ggdist)
library(emmeans)
library(lme4)
```

## Functions and Variables

```{r}
rad2deg <- function(rad) {(rad * 180) / (pi)}
deg2rad <- function(deg) {(deg * pi) / (180)}
round_any <- function(x, accuracy, f=round){f(x/ accuracy) * accuracy}
ang_mean <- function(x){rad2deg(atan2(mean(sin(deg2rad(x))),mean(cos(deg2rad(x)))))}

fold_angle_0_360_to_0_180 <- function(x){abs(abs(x-180)-180)}

fold_angle_neg_180_180_to_neg_90_90 <- function(x){ifelse(x > 90,90-abs(90-x),ifelse(x < -90, -90+abs(-90-x), x))}

min_n <- function(x,n){sort(x)[1:n]}
max_n <- function(x,n){sort(x,decreasing = TRUE)[1:n]}

light_no_ab_color = "#d4d7dd"
light_ab_color = "#f5ba9e"
dark_no_ab_color = "#5e94d4"
dark_ab_color = "#1E4371"
sim_color = "#777777"

flow_split_still = "#F59DE2"
flow_split_flow = "#5DD492"

dark_split_light = "#5e94d4"
dark_split_dark = "#011627"

tailbeat_len = 19

allowed_flow_type = c("Still Water","Flowing Water (2 BL/s)")

dot_binwidth = 0.03

text_size = 16
```


```{r}

eight_fish_turning_data <- read.csv("Data/eight_fish_data_turning.csv") %>%
                           mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation  == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep=", "))) %>%
                           mutate(Fish_Num_Ratio = Fish_Right/8) %>%
                           mutate(Fish_Ratio = paste(Fish_Left,Fish_Right,sep=":")) %>%
                           filter(Fish_Ratio %in% c("7:0","6:1","5:2","4:3","3:4","2:5","1:6","0:7")) %>%
                           mutate(Fish_Ratio = fct_relevel(Fish_Ratio,
                                                           c("7:0","6:1","5:2","4:3",
                                                             "3:4","2:5","1:6","0:7"))) %>%
                           mutate(turn_bool = ifelse(Turn_Dir == 0,1,0)) %>% 
                           dplyr::select(-c("Singles")) %>%
                           mutate(Type = "Eight Fish")

single_fish_turning_data <- read.csv("Data/single_fish_data_turning.csv") %>%
                           mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation  == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep=", "))) %>%
                           mutate(Fish_Num_Ratio = Fish_Right/8) %>%
                           mutate(Fish_Ratio = paste(Fish_Left,Fish_Right,sep=":")) %>%
                           filter(Fish_Ratio %in% c("7:0","6:1","5:2","4:3","3:4","2:5","1:6","0:7")) %>%
                           mutate(Fish_Ratio = fct_relevel(Fish_Ratio,
                                                           c("7:0","6:1","5:2","4:3",
                                                             "3:4","2:5","1:6","0:7"))) %>%
                           mutate(turn_bool = ifelse(Turn_Dir == 0,1,0)) %>% 
                           dplyr::select(-c("Singles")) %>%
                           mutate(Type = "Combined Single")
```

## Lets compare models for each of the different groups

Everything?

```{r}

eight_fish_turning_base <- glm(turn_bool ~ 1,
                               family = "binomial",
                               data = eight_fish_turning_data %>% filter(Flow == "Still Water"))

eight_fish_turning_step <- stepAIC(eight_fish_turning_base, 
                                   list(upper = ~ Wall_Dist*Fish_Num_Ratio*Ablation*Darkness, lower = ~1), 
                                   direction = "both",
                                   trace = F)
Anova(eight_fish_turning_step)



single_fish_turning_base <- glm(turn_bool ~ 1,
                               family = "binomial",
                               data = single_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, No Ablation, Light"))

single_fish_turning_step <- stepAIC(single_fish_turning_base, 
                                   list(upper = ~ Wall_Dist*Fish_Num_Ratio, lower = ~1), 
                                   direction = "both",
                                   trace = F)
Anova(single_fish_turning_step)

```


### Light

```{r}

turning_glm_F0LNDN_B <- glm(turn_bool ~ 1,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, No Ablation, Light"),
                         family = binomial)
turning_glm_F0LNDN_W <- glm(turn_bool ~ Wall_Dist,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, No Ablation, Light"),
                         family = binomial)
turning_glm_F0LNDN_F <- glm(turn_bool ~ Fish_Num_Ratio,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, No Ablation, Light"),
                         family = binomial)
turning_glm_F0LNDN_WF <- glm(turn_bool ~ Wall_Dist*Fish_Num_Ratio,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, No Ablation, Light"),
                         family = binomial)

AIC(turning_glm_F0LNDN_B,turning_glm_F0LNDN_W,turning_glm_F0LNDN_F,turning_glm_F0LNDN_WF) %>% arrange(AIC)

Anova(turning_glm_F0LNDN_F)

```

### Abalated

```{r}

turning_glm_F0LYDN_B <- glm(turn_bool ~1,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, Ablated, Light"),
                         family = binomial)
turning_glm_F0LYDN_W <- glm(turn_bool ~ Wall_Dist,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, Ablated, Light"),
                         family = binomial)
turning_glm_F0LYDN_F <- glm(turn_bool ~ Fish_Num_Ratio,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, Ablated, Light"),
                         family = binomial)
turning_glm_F0LYDN_WF <- glm(turn_bool ~ Wall_Dist*Fish_Num_Ratio,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, Ablated, Light"),
                         family = binomial)

AIC(turning_glm_F0LYDN_B,turning_glm_F0LYDN_W,turning_glm_F0LYDN_F,turning_glm_F0LYDN_WF) %>% arrange(AIC)

Anova(turning_glm_F0LYDN_F)

```

### Dark

```{r}

turning_glm_F0LNDY_B <- glm(turn_bool ~ 1,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, No Ablation, Dark"),
                         family = binomial)
turning_glm_F0LNDY_W <- glm(turn_bool ~ Wall_Dist,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, No Ablation, Dark"),
                         family = binomial)
turning_glm_F0LNDY_F <- glm(turn_bool ~ Fish_Num_Ratio,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, No Ablation, Dark"),
                         family = binomial)
turning_glm_F0LNDY_WF <- glm(turn_bool ~ Wall_Dist*Fish_Num_Ratio,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, No Ablation, Dark"),
                         family = binomial)

AIC(turning_glm_F0LNDY_B,turning_glm_F0LNDY_W,turning_glm_F0LNDY_F,turning_glm_F0LNDY_WF) %>% arrange(AIC)

Anova(turning_glm_F0LNDY_F)

```

### Ablated Dark

```{r}

turning_glm_F0LYDY_B <- glm(turn_bool ~ 1,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, Ablated, Dark"),
                         family = binomial)
turning_glm_F0LYDY_W <- glm(turn_bool ~ Wall_Dist,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, Ablated, Dark"),
                         family = binomial)
turning_glm_F0LYDY_F <- glm(turn_bool ~ Fish_Num_Ratio,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, Ablated, Dark"),
                         family = binomial)
turning_glm_F0LYDY_WF <- glm(turn_bool ~ Wall_Dist*Fish_Num_Ratio,
                         data = eight_fish_turning_data %>% filter(Flow_Ablation_Darkness == "Still Water, Ablated, Dark"),
                         family = binomial)

AIC(turning_glm_F0LYDY_B,turning_glm_F0LYDY_W,turning_glm_F0LYDY_F,turning_glm_F0LYDY_WF) %>% arrange(AIC)

Anova(turning_glm_F0LYDY_F)

```

