---
title: "Groups with lines!"
format: html
editor: visual
---

## Loading in the Libraries for Everything

```{r}
library(tidyverse)
library(ggplot2)
library(bbmle) #For ICtab
library(car)
library(ggpubr)
library(ggdist)
library(emmeans)
library(lme4)
library(pracma)
library(igraph)

```


## Functions and Variables

```{r}
rad2deg <- function(rad) {(rad * 180) / (pi)}
deg2rad <- function(deg) {(deg * pi) / (180)}
round_any <- function(x, accuracy, f=round){f(x/ accuracy) * accuracy}

deg_ang_mean <- function(x){rad2deg(atan2(mean(sin(deg2rad(x))),mean(cos(deg2rad(x)))))}
rad_ang_mean <- function(x){atan2(mean(sin(x)),mean(cos(x)))}

fold_angle_0_360_to_0_180 <- function(x){abs(abs(x-180)-180)}

fold_angle_neg_180_180_to_neg_90_90 <- function(x){ifelse(x > 90,90-abs(90-x),ifelse(x < -90, -90+abs(-90-x), x))}

min_n <- function(x,n){sort(x)[1:n]}
max_n <- function(x,n){sort(x,decreasing = TRUE)[1:n]}

light_no_ab_color = "#9C9C9C"   #"#C62E65" #A1BAA4" #"#d4d7dd" 06D6A0
light_ab_color = "#f5ba9e"
dark_no_ab_color = "#5e94d4"
dark_ab_color = "#49A078"   #"#1E4371"
sim_color = "#777777"

flow_split_still = "#F59DE2"
flow_split_flow = "#5DD492"

dark_split_light = "#5e94d4"
dark_split_dark = "#011627"

tailbeat_len = 19

allowed_flow_type = c("Still Water","Flowing Water (2 BL/s)")

dot_binwidth = 0.03

text_size = 16
sig_text_size = 6

# for turning data
x_offset <- 1.95
y_offset <- 1.15

fish_len <- 0.083197
```

```{r}
get_n_groups <- function(HeadX, HeadY, HeadZ, gDist){
  
  HeadX <- na.omit(HeadX)
  HeadY <- na.omit(HeadY)
  HeadZ <- na.omit(HeadZ)
  
  #Need at least 5 fish for this
  if(length(HeadX) < 5){
    return(NA)
  }
  
  A <- matrix(c(HeadX, HeadY, HeadZ), nrow =  length(HeadX), ncol = 3)
  B <- matrix(c(HeadX, HeadY,HeadZ), nrow =  length(HeadX), ncol = 3)
  
  X <- (distmat(A, B) <= max(gDist))
  
  #print(X)
  
  g <- graph_from_adjacency_matrix(X, mode = "lower", weighted = "weight")
  
  return(components(g)$no)
}
```


### Number of Groups

```{r}
all_fish_comp <- read.csv("Data/Fish_Raw_Values_3D.csv") %>% 
                           filter(Flow == "0") %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Ablation_Darkness = factor(paste(Ablation,Darkness,sep=", ")))


#Uncomment with new data, takes a long time to run just for graph edits
all_fish_comp_groups <- all_fish_comp %>% expand_grid(Group_Dist = seq(10,25,1)) %>%
                                          group_by(Darkness, Ablation, Ablation_Darkness,
                                                   Year, Month, Day, Trial, Tailbeat, Frame, Group_Dist) %>%
                                          summarize(n_groups = get_n_groups(Head_X,Head_Y,Head_Z,Group_Dist)) %>%
                                          ungroup() %>%
                                          group_by(Darkness, Ablation, Ablation_Darkness,
                                                   Year, Month, Day, Trial, Tailbeat, Group_Dist) %>%
                                          summarize(Groups = as.integer(mean(n_groups, na.rm = TRUE))) %>%
                                          ungroup() %>%

                                           # ### Used to remove every third point to reduce autocorrelation
                                           filter(Tailbeat %% 3 == 1) %>%
                                          na.omit()

saveRDS(all_fish_comp_groups, "all_fish_comp_groups.RDS")

all_fish_comp_groups <- readRDS("all_fish_comp_groups.RDS")

group_sum_data <- all_fish_comp_groups %>% 
                            filter(Groups > 0) %>% group_by(Ablation, Darkness, Groups, Group_Dist) %>%
                            summarise(count = n()) %>%
                            ungroup() %>%
                            mutate(Groups = as.factor(Groups),
                                   Groups = fct_rev(Groups))

group_sum_data_1 <- group_sum_data %>% complete(Darkness,Ablation,Group_Dist,Groups,fill=list(count=0)) %>%
                                       group_by(Darkness,Ablation,Group_Dist) %>%
                                       mutate(total = sum(count),
                                              Percent_Group = count / total) %>%
                                       ungroup() %>%
                                       filter(Groups == 1)

group_sum_data_1_binom <- all_fish_comp_groups %>% mutate(Is_One = ifelse(Groups == 1, 1, 0)) %>%
                                                   mutate(Date = paste(Year,Month,Day,sep="_"))

group_1_glm <- glm(Is_One ~ Ablation*Darkness*Group_Dist, data = group_sum_data_1_binom, family = "binomial")
group_1_aov <- Anova(group_1_glm, type=c("III"))
group_1_aov

# group_1_glmer <- glmer(Is_One ~ Ablation*Darkness*Group_Dist + Trial + (1|Date), data = group_sum_data_1_binom, family = "binomial")
# group_1_aov <- Anova(group_1_glmer, type=c("III"))
# group_1_aov

group_still <- ggplot(group_sum_data_1, aes(Group_Dist / fish_len / 100, Percent_Group, color = interaction(Ablation, Darkness, sep =", ")))+
  geom_point()+
  geom_line(data = group_sum_data_1_binom, aes(x = Group_Dist / fish_len / 100, y = predict(group_1_glm, type="response")), size = 1) + 
  xlab("Maximum Distance to Connect Group (BL)")+
  ylab("Proportion of Time in 1 Group")+
  scale_y_continuous(breaks = seq(0,1,0.25), limits = c(0,1))+
  scale_color_manual(values = c(light_no_ab_color,light_ab_color,dark_no_ab_color,dark_ab_color),
                     name = "Condition") +
  theme_light()+
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.x = element_text(size = text_size),
        axis.title.y = element_text(size = text_size),
        strip.text.x = element_text(size = text_size))

group_still

#ggsave("Paper Figures/Subgroup_Graphs.png", group_still, width = 10, height = 7)

```


